---
import BootstrapIcon from "@/components/icons/BootstrapIcon.astro";
import GitHub from "@/components/icons/GitHub.astro";
import Java from "@/components/icons/Java.astro";
import LinkButton from "@/components/LinkButton.astro";
import MySQLIcon from "@/components/icons/MySQLIcon.astro";
import PostgreIcon from "@/components/icons/PostgreIcon.astro";
import Spring from "@/components/icons/SpringIcon.astro";

const TAGS = {
	JAVA: {
		name: "Java",
		class: "bg-gray-300 text-gray-900",
		icon: Java,
	},
	SPRING: {
		name: "Spring",
		class: "bg-[#6ca65e] text-white",
		icon: Spring,
	},
	POSTGRE: {
		name: "PostgreSQL",
		class: "bg-[#003159] text-white",
		icon: PostgreIcon,
	},
	MYSQL: {
		name: "MySQL",
		class: "bg-[#336791] text-white",
		icon: MySQLIcon,
	},
	BOOTSTRAP: {
		name: "Bootstrap",
		class: "bg-[#563D7C] text-white",
		icon: BootstrapIcon,
	},
};

const PROJECTS = [
	{
		title: "Library - A management system for books",
		description:
			"Users can perform different actions based on their role, from CRUD operations on books to search for and borrow them. It also includes an automatic email sender for users who have overdue books. Built from scratch using Java, Jakarta EE, JPA, MySQL and Bootstrap.",
		github: "https://github.com/amadr-95/library-management",
		image: "/images/projects/library-project.webp",
		tags: [TAGS.JAVA, TAGS.MYSQL, TAGS.BOOTSTRAP],
	},
	{
		title: "Swagger API - User accounts",
		description:
			"API that offers comprehensive documentation and easy-to-use endpoints for user accounts. Built for educational purposes using Java and Spring Boot, with a PostgreSQL database.",
		github: "https://github.com/amadr-95/spring-jpa-postgres-swagger",
		image: "/images/projects/swagger-project.webp",
		tags: [TAGS.JAVA, TAGS.SPRING, TAGS.POSTGRE],
	},
];
---

{
	PROJECTS.map(({ image, title, description, tags, github }) => (
		<article class="flex flex-col gap-y-8 md:flex-row md:gap-x-8 mb-16">
			<div class="w-full md:w-1/2">
				<img
					alt={`Screenshot of project ${title}`}
					class="rounded-xl transition duration-500 lg:hover:scale-95"
					loading="lazy"
					src={image}
				/>
			</div>

			<div class="w-full md:w-1/2">
				<h3 class="text-2xl font-bold text-gray-100">{title}</h3>
				<div class="flex flex-wrap mt-2">
					<nav class="flex flex-wrap gap-3 mt-2">
						{tags.map((tag) => (
							<span
								class={`flex items-center gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2`}
							>
								<tag.icon class="size-4" />
								{tag.name}
							</span>
						))}
					</nav>

					<p class="mt-2 text-gray-300 text-pretty">{description}</p>

					<footer class="mt-4">
						{github && (
							<LinkButton href={github}>
								<GitHub class="size-6" />
								Code
							</LinkButton>
						)}
					</footer>
				</div>
			</div>
		</article>
	))
}
